"""init

Revision ID: 6ae84e420e90
Revises: 
Create Date: 2024-07-24 16:49:01.763070

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import UUID
revision = '6ae84e420e90'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";")

    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute("""
                DO $$
                BEGIN
                    IF NOT EXISTS (SELECT 1 FROM role WHERE id = 1) THEN
                        INSERT INTO role (id, name) VALUES (1, 'admin');
                    END IF;

                    IF NOT EXISTS (SELECT 1 FROM role WHERE id = 2) THEN
                        INSERT INTO role (id, name) VALUES (2, 'user');
                    END IF;

                    IF NOT EXISTS (SELECT 1 FROM role WHERE id = 3) THEN
                        INSERT INTO role (id, name) VALUES (3, 'guest');
                    END IF;
                END
                $$;
            """)


    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('licence_key', UUID(as_uuid=True), nullable=False,
                              server_default=sa.text("uuid_generate_v4()")),

                    sa.Column('license_time', sa.DateTime(), nullable=True),
    sa.Column('user_info', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )

    op.execute("""
                INSERT INTO "user" (username, licence_key, license_time, role_id) VALUES
                ('admin', uuid_generate_v4(), 'infinity', 1)
            """)


    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
